function plot_psth_average(input,fieldname,param)
% % plot_psth %
%PURPOSE:   Plot PSTH
%AUTHORS:   AC Kwan 170515
%
%INPUT ARGUMENTS
%   input:        Structure generated by get_psth().
%   tlabel:       Text to put as title of the plot.
%   xtitle:       Text to put as the label for x-axis.

%% Plotting parameters
colors={'r-','k-','r--','k--','b'};
gray=[0.7 0.7 0.7];

%% find CI using the bootstrap method
numRep = param.numBootstrapRepeat;
CI = param.CI;
ROInum = size(input{1}{1},1);

for k = 1:length(input)
    for kk = 1:length(fieldname{k})
        data = input{k}{kk};
        bootSig=[];
        parfor i=1:numRep

            %draw a subset for bootstrap
            drawIndex=randsample(ROInum,ROInum,'true'); %each time draw a set of events with replacement
            drawSig=[]; drawTime=[];
            drawSig = data(drawIndex,:);


            %go through each time bin, and average


            tempBoot=nanmean(drawSig,1);

            bootSig(:,i) = tempBoot;
        end

        %bootstrap mean and confidence interval
        output{k}{kk}.bootSig = bootSig;
        output{k}{kk}.bootavg=squeeze(nanmean(bootSig,2));
        output{k}{kk}.bootlow=prctile(bootSig,0.5*(1-CI)*100,2);
        output{k}{kk}.boothigh=prctile(bootSig,(1-0.5*(1-CI))*100,2);
        %output{kk}.nEvent = nEvent;
    end
end

%% Setup
t=-2.95:0.1:4.95;
nPanel=length(input);  %how many panel?


nSig=size(input{1},2);


%set up the y-axis range
templow=[]; temphigh=[];

for gg = 1:nPanel
    for k=1:nSig
        templow=[templow; output{gg}{k}.bootlow];
        temphigh=[temphigh; output{gg}{k}.boothigh];
    end
end

minY=nanmin(templow)-0.5;
maxY=nanmax(temphigh)+0.5;



%%
figure;


for gg = 1:nPanel
    subplot(1,nPanel,gg); hold on;
    % plot the mean signals
    legstring={};
    for k=1:nSig
        plot(t,output{gg}{k}.bootavg,colors{k}); hold on;
        legstring(k)=join(fieldname{gg}{k});
    end

    % plot the shaded errors

    for k=1:nSig
        errorshade(t,output{gg}{k}.bootlow,output{gg}{k}.boothigh,gray);
    end


    % plot the mean signals again so they lie on top of shaded errors
    for k=1:nSig
        plot(t,output{gg}{k}.bootavg,colors{k});
    end

    legend(legstring);

    plot([0 0],[minY maxY],'k','LineWidth',2);
    xlabel('Time from cue (s)'); ylabel('dF/F');
    ylim([minY maxY]);
    xlim([t(1) t(end)]);
    %title(tlabel);
    set(gca,'box','off')
end

%% plot miss trials only
figure; 
legstring={};
    for k=1:nSig
        plot(t,output{3}{k}.bootavg,colors{k}); hold on;
        legstring(k)=join(fieldname{3}{k});
    end

    % plot the shaded errors

    for k=1:1
        errorshade(t,output{3}{k}.bootlow,output{3}{k}.boothigh,gray);
    end


    % plot the mean signals again so they lie on top of shaded errors
    for k=1:nSig
        plot(t,output{3}{k}.bootavg,colors{k});
    end

    legend(legstring);

    plot([0 0],[minY maxY],'k','LineWidth',2);
    xlabel('Time from cue (s)'); ylabel('dF/F');
    ylim([0.2 0.3]);
    xlim([t(1) t(end)]);
    %title(tlabel);
    set(gca,'box','off')
end




